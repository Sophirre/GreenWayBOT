#!/usr/bin/env python3

from os import listdir
from json import loads, dump

# from aiogram import types

from aiogram.utils import executor
from aiogram.dispatcher.filters import Text

from config import *
import keyboards.client_kb as keyboard
import admin


def history_record(req, file='json/history.json'):
    with open(file, 'a') as f:
        dump(req, f, indent=4, ensure_ascii=False)
        f.write('\n')
    return True


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    start_message_text = '''üçÄ<b>–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç GreenWayShop</b>üçÄ
    
–ú—ã —Å –∑–∞–±–æ—Ç–æ–π –æ—Ç–Ω–æ—Å–∏–º—Å—è –∫ –∑–∞—â–∏—Ç–µ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã, 
–ø–æ—ç—Ç–æ–º—É –∫–∞–∂–¥—ã–π –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω 
–ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç–∏

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤—Å—ë —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –¥–ª—è:

üè° <b>–î–æ–º–∞</b>
üöó <b>–ú–∞—à–∏–Ω—ã</b>
‚ú® <b>–£—Ö–æ–¥–∞ –∑–∞ —Å–æ–±–æ–π</b>
üê∂ <b>–í–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö –ø–∏—Ç–æ–º—Ü–µ–≤</b>.

–£ –Ω–∞—Å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç <b>–±–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b> –ü—Ä–∏–≤–æ–¥–∏—Ç–µ –¥—Ä—É–∑–µ–π - 
–ø–æ–ª—É—á–∞–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏,
 –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Åüòä'''
    await bot.send_message(message.from_user.id,
                           f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}',
                           reply_markup=keyboard.menu_kb(message)['kb'])
    await bot.send_message(message.from_user.id, start_message_text,
                           reply_markup=keyboard.menu_kb(message)['callback'])


@dp.message_handler(content_types=['text'])
async def message_handler(message: types.Message):
    message_text = message.text

    if 'üõç' in message_text:
        await bot.send_message(message.from_user.id,
                               'üõç', reply_markup=keyboard.catalog()['kb'])
        await bot.send_message(message.from_user.id,
                               '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',
                               reply_markup=keyboard.catalog()['callback'])
    elif 'üìÉ' in message_text:
        await bot.send_message(message.from_user.id,
                               'üìÉ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤',
                               reply_markup=keyboard.menu_kb(message))
    elif 'üõí' in message_text:
        await bot.send_message(message.from_user.id,
                               'üõí', reply_markup=keyboard.menu_kb(message))
    elif 'üìÖ' in message_text:
        await bot.send_message(message.from_user.id, 'üìÖ –ù–æ–≤–æ—Å—Ç–∏',
                               reply_markup=keyboard.menu_kb(message))
    elif '‚öô' in message_text:
        await bot.send_message(message.from_user.id, '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                               reply_markup=keyboard.menu_kb(message))
    elif '‚≠ê' in message_text:
        await bot.send_message(message.from_user.id, '‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ',
                               reply_markup=keyboard.menu_kb(message))
    elif 'üè°' in message_text:
        await bot.send_message(message.from_user.id, 'üè°',
                               reply_markup=keyboard.menu_kb(message)['kb'])
    elif 'üîë' in message.text:
        if admin.admin_check(message):
            await bot.send_message(message.chat.id,
                                '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å',
                                reply_markup=keyboard.admin_kb())
        else:
            await bot.send_message(message.chat.id,
                                   '–¢–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')


@dp.callback_query_handler(text='popular')
async def popular(callback: types.CallbackQuery):
    await callback.answer('Popular')


@dp.callback_query_handler(text='textile')
async def textile(callback: types.CallbackQuery):
    work_dir = './json/data/textile/'
    subsections_names = listdir(work_dir)  # get filenames in a dir
    await callback.message.edit_text(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',
                                     reply_markup=keyboard.subsections_cb(
                                         'textile_sb_',
                                         subsections_names))


@dp.callback_query_handler(Text(startswith='textile_sb_'))
async def textile_subsections(callback: types.CallbackQuery):
    work_dir = './json/data/textile/'
    file = None

    if '–î–ª—è –ê–≤—Ç–æ' in callback.data:
        file = '–î–ª—è –ê–≤—Ç–æ'
    elif '–î–ª—è –¢–µ–ª–∞' in callback.data:
        file = '–î–ª—è –¢–µ–ª–∞'
    elif '–î–ª—è –£–±–æ—Ä–∫–∏' in callback.data:
        file = '–î–ª—è –£–±–æ—Ä–∫–∏'

    with open(work_dir + file + '.json') as f:
        json = loads(f.read())
    for i in range(len(json)-1):
        print(i)
        message_markup = dict(
            image=f'{json[i]["image"]}',
            name=f'<b>{json[i]["name"]}</b>',
            price=f'–¶–µ–Ω–∞:  {int(json[i]["price"])}'
        )
        message = f'''
         {message_markup['image']}
        {message_markup['name']}\n
        {message_markup['price']}
                    '''

        await bot.send_message(callback.from_user.id, message)
        await callback.answer()


@dp.callback_query_handler(text='house')
async def house(callback: types.CallbackQuery):
    work_dir = './json/data/house/'
    subsections_names = listdir(work_dir)  # get filenames in a dir
    await callback.message.edit_text(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',
                                     reply_markup=keyboard.subsections_cb(
                                         'house_sb_',
                                         subsections_names))


@dp.callback_query_handler(Text(startswith='house_sb_'))
async def textile_subsections(callback: types.CallbackQuery):
    work_dir = './json/data/house/'
    file = None
    if '–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —Å—Ç–∏—Ä–∫–∏' in callback.data:
        file = '–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —Å—Ç–∏—Ä–∫–∏'
    elif '–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —É–±–æ—Ä–∫–∏' in callback.data:
        file = '–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —É–±–æ—Ä–∫–∏'
    elif '–®–≤–∞–±—Ä—ã' in callback.data:
        file = '–®–≤–∞–±—Ä—ã'
    try:
        with open(work_dir + file + '.json') as f:
            json = loads(f.read())
        for i in range(len(json)):
            message_markup = dict(
                image=f'{json[i]["image"]}',
                name=f'<b>{json[i]["name"]}</b>',
                price=f'–¶–µ–Ω–∞: {int(json[i]["price"])}'
            )
            print(message_markup['name'])
            message = f'''
            {message_markup['image']}
            {message_markup['name']}\n
            {message_markup['price']}
                        '''
            await bot.send_message(callback.from_user.id, message)
            await callback.answer()
    except TypeError:
        await bot.send_message(callback.from_user.id,
                               '–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–µ–Ω–µ–Ω–∏—è, '
                               '—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò∞ \n'
                               '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –µ—â—ë —Ä–∞–∑')
        await callback.answer()

if __name__ == '__main__':
    executor.start_polling(dp)
